{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/AddCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchingButton from \"./TouchingButton\";\nimport { gray, green } from \"../utils/colors\";\nimport { connect } from 'react-redux';\nimport { addCardToDeck } from \"../actions/index\";\nimport { addCardToDeckAS } from \"../utils/api\";\nexport class AddCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      answer: '',\n      question: ''\n    };\n\n    this.changeA = answer => {\n      this.setState({\n        answer\n      });\n    };\n\n    this.changeQ = question => {\n      this.setState({\n        question\n      });\n    };\n\n    this.submit = () => {\n      const {\n        addCardToDeck,\n        title,\n        navigation\n      } = this.props;\n      const card = {\n        answer: this.state.answer,\n        question: this.state.question\n      };\n      addCardToDeckAS(title, card);\n      addCardToDeck(title, card);\n      this.setState({\n        question: '',\n        answer: ''\n      });\n      navigation.goBack();\n    };\n  }\n\n  render() {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      }\n    }, \"Add New Question ..\"), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your question\",\n      value: this.state.question,\n      onChangeText: this.changeQ,\n      onSubmitEditing: () => this.answerTextInput.focus(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      }\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your Answer\",\n      value: this.state.answer,\n      onChangeText: this.changeA,\n      ref: input => {\n        this.answerTextInput = input;\n      },\n      onSubmitEditing: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }), React.createElement(TouchingButton, {\n      btnStyle: {\n        backgroundColor: green,\n        borderColor: '#fff'\n      },\n      onPress: this.submit,\n      disabled: this.state.question === '' || this.state.answer === '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      }\n    }, \"Submit your new Card\"));\n  }\n\n}\nAddCard.propTypes = {\n  addCardToDeck: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  navigation: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, _ref) => {\n  let {\n    navigation\n  } = _ref;\n  const title = navigation.getParam('title', 'undefined');\n  return {\n    title\n  };\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    fontSize: 20,\n    height: 40,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20\n  }\n});\nexport default connect(mapStateToProps, {\n  addCardToDeck\n})(AddCard);","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/AddCard.js"],"names":["React","Component","PropTypes","TouchingButton","gray","green","connect","addCardToDeck","addCardToDeckAS","AddCard","state","answer","question","changeA","setState","changeQ","submit","title","navigation","props","card","goBack","render","styles","input","answerTextInput","focus","backgroundColor","borderColor","propTypes","func","isRequired","string","object","mapStateToProps","getParam","StyleSheet","create","borderWidth","borderRadius","fontSize","height","paddingLeft","paddingRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, View, TextInput, StyleSheet } from 'react-native';\r\nimport TouchingButton from './TouchingButton';\r\nimport { gray, green } from '../utils/colors';\r\nimport { connect } from 'react-redux';\r\nimport { addCardToDeck } from '../actions/index';\r\nimport { addCardToDeckAS } from '../utils/api';\r\n\r\nexport class AddCard extends Component {\r\n  static propTypes = {\r\n    addCardToDeck: PropTypes.func.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    navigation: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    answer: '',\r\n    question: '',\r\n  };\r\n\r\n  changeA = answer => {\r\n    this.setState({ answer });\r\n  };\r\n\r\n  changeQ = question => {\r\n    this.setState({ question });\r\n  };\r\n\r\n  submit = () => {\r\n    const { addCardToDeck, title, navigation } = this.props;\r\n    const card = {\r\n      answer: this.state.answer,\r\n      question: this.state.question,\r\n    };\r\n\r\n    addCardToDeckAS(title, card);\r\n    addCardToDeck(title, card);\r\n\r\n    this.setState({ question: '', answer: '' });\r\n    navigation.goBack();\r\n  };\r\n  render() {\r\n    return (\r\n      <View>\r\n            <Text>Add New Question ..</Text>\r\n            <TextInput style={styles.input} placeholder=\"Enter your question\"\r\n              value={this.state.question}\r\n              onChangeText={this.changeQ}\r\n              onSubmitEditing={() => this.answerTextInput.focus()}/>\r\n\r\n            <TextInput style={styles.input} placeholder=\"Enter your Answer\"\r\n              value={this.state.answer}\r\n              onChangeText={this.changeA}\r\n              ref={input => {this.answerTextInput = input;}}\r\n              onSubmitEditing={this.submit}/>\r\n          <TouchingButton\r\n            btnStyle={{ backgroundColor: green, borderColor: '#fff' }}\r\n            onPress={this.submit}\r\n            disabled={this.state.question === '' || this.state.answer === ''}\r\n          >\r\n            Submit your new Card\r\n          </TouchingButton>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { navigation }) => {\r\n  const title = navigation.getParam('title', 'undefined');\r\n\r\n  return {\r\n    title\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    backgroundColor: '#fff',\r\n    borderRadius: 5,\r\n    fontSize: 20,\r\n    height: 40,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    marginBottom: 20,\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps,{ addCardToDeck })(AddCard);\r\n"]},"metadata":{},"sourceType":"module"}