{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/App.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { createStore, applyMiddleware } from 'redux';\nimport Constants from 'expo-constants';\nimport { Provider } from 'react-redux';\nimport { setNotification } from \"./utils/helpers\";\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport reducer from \"./reducers/index\";\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n\nfunction StateBar(_ref) {\n  let {\n    backgroundColor\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"backgroundColor\"]);\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor,\n      height: Constants.statusBarHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  }, React.createElement(StateBar, _extends({\n    translucent: true,\n    backgroundColor: backgroundColor\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    }\n  })));\n}\n\nStateBar.propTypes = {\n  backgroundColor: PropTypes.string.isRequire\n};\nexport default class App extends React.Component {\n  componentDidMount() {\n    setNotification();\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      }\n    }, React.createElement(StatusBar, {\n      backgroundColor: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      }\n    }), React.createElement(AppNavigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      }\n    })));\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ddd',\n    flex: 1,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/App.js"],"names":["React","PropTypes","createStore","applyMiddleware","Constants","Provider","setNotification","thunk","logger","AppNavigator","reducer","store","StateBar","backgroundColor","props","height","statusBarHeight","propTypes","string","isRequire","App","Component","componentDidMount","render","styles","container","StyleSheet","create","flex","marginTop"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,eAAT;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP;AACA,OAAOC,OAAP;AAGA,MAAMC,KAAK,GAAGT,WAAW,CACvBQ,OADuB,EAEvBP,eAAe,CAACI,KAAD,EAAQC,MAAR,CAFQ,CAAzB;;AAKA,SAASI,QAAT,OAAiD;AAAA,MAA/B;AAAEC,IAAAA;AAAF,GAA+B;AAAA,MAATC,KAAS;;AAC/C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAF;AAAmBE,MAAAA,MAAM,EAAEX,SAAS,CAACY;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,WAAW,MAArB;AAAsB,IAAA,eAAe,EAAEH;AAAvC,KAA4DC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AACDF,QAAQ,CAACK,SAAT,GAAqB;AAAEJ,EAAAA,eAAe,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC;AAApC,CAArB;AAEA,eAAe,MAAMC,GAAN,SAAkBpB,KAAK,CAACqB,SAAxB,CAAkC;AAC/CC,EAAAA,iBAAiB,GAAG;AAAEhB,IAAAA,eAAe;AAAI;;AAEzCiB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,eAAe,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAZ8C;AAejD,MAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTZ,IAAAA,eAAe,EAAE,MADR;AAETe,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,SAAS,EAAE;AAHF;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, View, StatusBar } from 'react-native';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport Constants from 'expo-constants';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { setNotification } from './utils/helpers';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport AppNavigator from './navigation/AppNavigator';\r\nimport reducer from './reducers/index';\r\n\r\n\r\nconst store = createStore(\r\n  reducer /* preloadedState, */,\r\n  applyMiddleware(thunk, logger)\r\n);\r\n\r\nfunction StateBar({ backgroundColor, ...props }) {\r\n  return (\r\n    <View style={{ backgroundColor, height: Constants.statusBarHeight }}>\r\n      <StateBar translucent backgroundColor={backgroundColor} {...props} />\r\n    </View>\r\n  );\r\n}\r\nStateBar.propTypes = { backgroundColor: PropTypes.string.isRequire};\r\n\r\nexport default class App extends React.Component {\r\n  componentDidMount() { setNotification();}\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <View style={styles.container}>\r\n          <StatusBar backgroundColor=\"green\"/>\r\n          <AppNavigator />\r\n        </View>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#ddd',\r\n    flex: 1,\r\n    marginTop: 30,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}