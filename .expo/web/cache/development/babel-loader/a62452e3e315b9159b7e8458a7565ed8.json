{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/Deck.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { white, textGray, darkGray, gray } from \"../utils/colors\";\nimport { connect } from 'react-redux';\n\nconst Deck = props => {\n  const {\n    eachDeck\n  } = props;\n\n  switch (eachDeck) {\n    case undefined:\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        }\n      });\n\n    default:\n      break;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    }\n  }, React.createElement(Text, {\n    style: styles.dectTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    }\n  }, eachDeck.title, \" (\", eachDeck.questions.length, \" Cards)\"));\n};\n\nDeck.propTypes = {\n  eachDeck: PropTypes.object\n};\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    borderColor: darkGray,\n    backgroundColor: gray,\n    marginBottom: 20,\n    minHeight: 100,\n    borderWidth: 2,\n    justifyContent: \"center\"\n  },\n  deckTitle: {\n    fontSize: 20\n  }\n});\n\nconst mapStateToProps = (state, _ref) => {\n  let {\n    id\n  } = _ref;\n  const eachDeck = state[id];\n  return {\n    eachDeck\n  };\n};\n\nexport default connect(mapStateToProps)(Deck);","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/Deck.js"],"names":["React","PropTypes","white","textGray","darkGray","gray","connect","Deck","props","eachDeck","undefined","styles","container","dectTitle","title","questions","length","propTypes","object","StyleSheet","create","alignItems","borderColor","backgroundColor","marginBottom","minHeight","borderWidth","justifyContent","deckTitle","fontSize","mapStateToProps","state","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,IAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;;AAEA,UAAQC,QAAR;AACE,SAAKC,SAAL;AACI,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AAEJ;AACE;AALJ;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,QAAQ,CAACK,KAAzC,QAAkDL,QAAQ,CAACM,SAAT,CAAmBC,MAArE,YADJ,CADF;AAKD,CAfD;;AAgBAT,IAAI,CAACU,SAAL,GAAiB;AACfR,EAAAA,QAAQ,EAAER,SAAS,CAACiB;AADL,CAAjB;AAIA,MAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,WAAW,EAAElB,QAFJ;AAGTmB,IAAAA,eAAe,EAAElB,IAHR;AAITmB,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,SAAS,EAAE,GALF;AAMTC,IAAAA,WAAW,EAAE,CANJ;AAOTC,IAAAA,cAAc,EAAE;AAPP,GADoB;AAU/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD;AAVoB,CAAlB,CAAf;;AAeA,MAAMC,eAAe,GAAG,CAACC,KAAD,WAAmB;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AACzC,QAAMvB,QAAQ,GAAGsB,KAAK,CAACC,EAAD,CAAtB;AAEA,SAAO;AACLvB,IAAAA;AADK,GAAP;AAGD,CAND;;AAQA,eAAeH,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,IAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { white, textGray, darkGray, gray } from '../utils/colors';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Deck = props => {\r\n  const { eachDeck } = props;\r\n\r\n  switch (eachDeck) {\r\n    case undefined:\r\n        return <View style={styles.container} />;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n        <Text style={styles.dectTitle}>{eachDeck.title} ({eachDeck.questions.length} Cards)</Text>\r\n    </View>\r\n  );\r\n};\r\nDeck.propTypes = {\r\n  eachDeck: PropTypes.object\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    borderColor: darkGray,\r\n    backgroundColor: gray,\r\n    marginBottom: 20,\r\n    minHeight: 100,\r\n    borderWidth: 2,\r\n    justifyContent: \"center\"\r\n  },\r\n  deckTitle: {\r\n    fontSize: 20\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n  const eachDeck = state[id];\r\n\r\n  return {\r\n    eachDeck\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Deck);\r\n"]},"metadata":{},"sourceType":"module"}