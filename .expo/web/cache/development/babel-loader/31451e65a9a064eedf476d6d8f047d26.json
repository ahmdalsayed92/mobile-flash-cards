{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/navigation/MainTabNavigator.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Icon from '@expo/vector-icons';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createBottomTabNavigator, createStackNavigator } from 'react-navigation';\nimport Quiz from \"../components/Quiz\";\nimport DetailsOfDeck from \"../components/DetailsOfDeck\";\nimport ListOfDecks from \"../components/ListOfDecks\";\nimport FactoryMood from \"../components/FactoryMood\";\nimport { darkGray, lightGreen, white, green } from \"../utils/colors\";\nimport AddDeck from \"../components/AddDeck\";\nimport AddCard from \"../components/AddCard\";\nconst isIOS = Platform.OS === 'ios' ? true : false;\nconst routeConfigs = {\n  Decks: {\n    screen: ListOfDecks,\n    navigationOptions: {\n      tabBarLabel: 'Decks',\n      tabBarIcon: (_ref) => {\n        let {\n          tintColor\n        } = _ref;\n        return React.createElement(Icon.Ionicons, {\n          name: isIOS ? 'ios-bookmarks' : 'md-bookmarks',\n          size: 20,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          }\n        });\n      }\n    }\n  },\n  AddDeck: {\n    screen: AddDeck,\n    navigationOptions: {\n      tabBarLabel: 'Add Deck',\n      tabBarIcon: (_ref2) => {\n        let {\n          tintColor\n        } = _ref2;\n        return React.createElement(Icon.FontAwesome, {\n          name: \"plus-square\",\n          size: 20,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          }\n        });\n      }\n    }\n  },\n  FactoryMood: {\n    screen: FactoryMood,\n    navigationOptions: {\n      tabBarLabel: 'Factory Mood',\n      tabBarIcon: (_ref3) => {\n        let {\n          tintColor\n        } = _ref3;\n        return React.createElement(Icon.FontAwesome, {\n          name: \"sliders\",\n          size: 20,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        });\n      }\n    }\n  }\n};\nrouteConfigs.FactoryMood.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nrouteConfigs.AddDeck.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nrouteConfigs.Decks.navigationOptions.tabBarIcon.propTypes = {\n  tintColor: PropTypes.string.isRequired\n};\nconst tabNavigatorConfig = {\n  navigationOptions: {\n    header: null\n  },\n  defaultNavigationOptions: {\n    bounces: true\n  },\n  tabBarOptions: {\n    showIcon: true,\n    activeTintColor: green,\n    style: {\n      height: 50,\n      backgroundColor: white,\n      shadowColor: 'rgba(0,0,0, 0.24)',\n      shadowOffset: {\n        width: 0,\n        height: 3\n      },\n      shadowRadius: 6,\n      shadowOpacity: 1,\n      borderTopWidth: 1,\n      borderTopColor: darkGray\n    },\n    tabStyle: {\n      marginTop: 5,\n      marginBottom: 3\n    },\n    labelStyle: {\n      fontSize: 12,\n      fontWeight: 'bold'\n    }\n  }\n};\nconst Tabs = createBottomTabNavigator(routeConfigs, tabNavigatorConfig);\nconst MainNavigator = createStackNavigator({\n  Home: {\n    screen: Tabs\n  },\n  DetailsOfDeck: {\n    screen: DetailsOfDeck,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      },\n      title: 'Deck Details'\n    }\n  },\n  AddCard: {\n    screen: AddCard,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      },\n      headerTitleStyle: {\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      title: 'Add Card'\n    }\n  },\n  Quiz: {\n    screen: Quiz,\n    navigationOptions: {\n      headerTintColor: green,\n      headerStyle: {\n        backgroundColor: lightGreen\n      }\n    }\n  }\n}, {\n  headerLayoutPreset: 'center'\n});\nexport default MainNavigator;","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/navigation/MainTabNavigator.js"],"names":["React","PropTypes","Icon","createBottomTabNavigator","createStackNavigator","Quiz","DetailsOfDeck","ListOfDecks","FactoryMood","darkGray","lightGreen","white","green","AddDeck","AddCard","isIOS","Platform","OS","routeConfigs","Decks","screen","navigationOptions","tabBarLabel","tabBarIcon","tintColor","propTypes","string","isRequired","tabNavigatorConfig","header","defaultNavigationOptions","bounces","tabBarOptions","showIcon","activeTintColor","style","height","backgroundColor","shadowColor","shadowOffset","width","shadowRadius","shadowOpacity","borderTopWidth","borderTopColor","tabStyle","marginTop","marginBottom","labelStyle","fontSize","fontWeight","Tabs","MainNavigator","Home","headerTintColor","headerStyle","title","headerTitleStyle","justifyContent","textAlign","headerLayoutPreset"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from '@expo/vector-icons';\r\nimport { Platform } from 'react-native';\r\nimport { createBottomTabNavigator, createStackNavigator} from 'react-navigation';\r\nimport Quiz from '../components/Quiz';\r\nimport DetailsOfDeck from '../components/DetailsOfDeck';\r\nimport ListOfDecks from '../components/ListOfDecks';\r\nimport FactoryMood from '../components/FactoryMood';\r\nimport { darkGray, lightGreen, white, green } from '../utils/colors';\r\nimport AddDeck from '../components/AddDeck';\r\nimport AddCard from '../components/AddCard';\r\n\r\n\r\nconst isIOS = Platform.OS === 'ios' ? true : false;\r\n\r\nconst routeConfigs = {\r\n  Decks: { screen: ListOfDecks,\r\n    navigationOptions: {\r\n      tabBarLabel: 'Decks', tabBarIcon: ({ tintColor }) => (\r\n        <Icon.Ionicons name={isIOS ? 'ios-bookmarks' : 'md-bookmarks'} size={20}color={tintColor}/>)\r\n    }\r\n  },\r\n  AddDeck: {\r\n    screen: AddDeck,\r\n    navigationOptions: { tabBarLabel: 'Add Deck', tabBarIcon: ({ tintColor }) => (\r\n        <Icon.FontAwesome name=\"plus-square\" size={20} color={tintColor} />)\r\n    }\r\n  },\r\n  FactoryMood: { screen: FactoryMood,\r\n      navigationOptions: {\r\n      tabBarLabel: 'Factory Mood', tabBarIcon: ({ tintColor }) => (\r\n        <Icon.FontAwesome name=\"sliders\" size={20} color={tintColor} />\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\nrouteConfigs.FactoryMood.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\nrouteConfigs.AddDeck.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\nrouteConfigs.Decks.navigationOptions.tabBarIcon.propTypes = {\r\n  tintColor: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nconst tabNavigatorConfig = {\r\n  navigationOptions: {\r\n    header: null\r\n  },\r\n  defaultNavigationOptions: {\r\n    bounces: true\r\n  },\r\n  tabBarOptions: {\r\n    showIcon: true,\r\n    activeTintColor: green,\r\n    style: {\r\n      height: 50,\r\n      backgroundColor: white,\r\n      shadowColor: 'rgba(0,0,0, 0.24)',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3\r\n      },\r\n      shadowRadius: 6,\r\n      shadowOpacity: 1,\r\n      borderTopWidth: 1,\r\n      borderTopColor: darkGray\r\n    },\r\n    tabStyle: {\r\n      marginTop: 5,\r\n      marginBottom: 3\r\n    },\r\n    labelStyle: {\r\n      fontSize: 12,\r\n      fontWeight: 'bold'\r\n    },\r\n  \r\n  }\r\n};\r\n\r\nconst Tabs = createBottomTabNavigator(routeConfigs, tabNavigatorConfig);\r\n\r\nconst MainNavigator = createStackNavigator(\r\n  {\r\n    Home: {\r\n      screen: Tabs\r\n    },\r\n    DetailsOfDeck: {\r\n      screen: DetailsOfDeck,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        },\r\n        title: 'Deck Details'\r\n      }\r\n    },\r\n    AddCard: {\r\n      screen: AddCard,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        },\r\n        headerTitleStyle: {\r\n          justifyContent: 'center',\r\n          textAlign: 'center'\r\n        },\r\n        title: 'Add Card'\r\n      }\r\n    },\r\n    Quiz: {\r\n      screen: Quiz,\r\n      navigationOptions: {\r\n        headerTintColor: green,\r\n        headerStyle: {\r\n          backgroundColor: lightGreen\r\n        }\r\n      }\r\n    }\r\n  },\r\n  { headerLayoutPreset: 'center' }\r\n);\r\n\r\nexport default MainNavigator;\r\n"]},"metadata":{},"sourceType":"module"}