{"ast":null,"code":"import React from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nconst NOTIFICATION_KEY = 'MobileFlashcard:notifications';\nconst CHANNEL_ID = 'DailyReminder';\n\nfunction createNotification() {\n  return {\n    title: 'Reminder to study',\n    body: \"ðŸ‘‹Please, Don't forget to study for today! Good Luck!\",\n    android: {\n      channelId: CHANNEL_ID,\n      color: 'red',\n      sticky: false\n    }\n  };\n}\n\nexport function clearNotification() {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY).then(Notifications.cancelAllScheduledNotificationsAsync);\n}\nexport function setNotification() {\n  AsyncStorage.getItem(NOTIFICATION_KEY).then(JSON.parse).then(data => {\n    if (data === null) {\n      Permissions.askAsync(Permissions.NOTIFICATIONS).then((_ref) => {\n        let {\n          status\n        } = _ref;\n\n        if (status === 'granted') {\n          Notifications.createChannelAndroidAsync(CHANNEL_ID, createChannel()).then(val => console.log('channel return:', val)).then(() => {\n            Notifications.cancelAllScheduledNotificationsAsync();\n            const tomorrow = new Date();\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            tomorrow.setHours(20);\n            tomorrow.setMinutes(0);\n            Notifications.scheduleLocalNotificationAsync(createNotification(), {\n              time: tomorrow,\n              repeat: 'day'\n            });\n            AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true));\n          }).catch(err => {\n            console.log('err', err);\n          });\n        }\n      });\n    }\n  });\n}\n\nfunction createChannel() {\n  return {\n    name: 'Daily Reminder',\n    description: 'This is a daily reminder for you to study, Good Luck',\n    priority: 'high',\n    sound: true\n  };\n}","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/utils/helpers.js"],"names":["React","Notifications","Permissions","NOTIFICATION_KEY","CHANNEL_ID","createNotification","title","body","android","channelId","color","sticky","clearNotification","AsyncStorage","removeItem","then","cancelAllScheduledNotificationsAsync","setNotification","getItem","JSON","parse","data","askAsync","NOTIFICATIONS","status","createChannelAndroidAsync","createChannel","val","console","log","tomorrow","Date","setDate","getDate","setHours","setMinutes","scheduleLocalNotificationAsync","time","repeat","setItem","stringify","catch","err","name","description","priority","sound"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,QAA8B,MAA9B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,MAAMC,gBAAgB,GAAG,+BAAzB;AACA,MAAMC,UAAU,GAAG,eAAnB;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,SAAO;AACLC,IAAAA,KAAK,EAAE,mBADF;AAELC,IAAAA,IAAI,EAAE,uDAFD;AAGLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAEL,UADJ;AAEPM,MAAAA,KAAK,EAAE,KAFA;AAGPC,MAAAA,MAAM,EAAE;AAHD;AAHJ,GAAP;AASD;;AAED,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAOC,YAAY,CAACC,UAAb,CAAwBX,gBAAxB,EAA0CY,IAA1C,CACLd,aAAa,CAACe,oCADT,CAAP;AAGD;AAED,OAAO,SAASC,eAAT,GAA2B;AAChCJ,EAAAA,YAAY,CAACK,OAAb,CAAqBf,gBAArB,EACGY,IADH,CACQI,IAAI,CAACC,KADb,EAEGL,IAFH,CAEQM,IAAI,IAAI;AACZ,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBnB,MAAAA,WAAW,CAACoB,QAAZ,CAAqBpB,WAAW,CAACqB,aAAjC,EAAgDR,IAAhD,CAAqD,UAAgB;AAAA,YAAf;AAAES,UAAAA;AAAF,SAAe;;AACnE,YAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBvB,UAAAA,aAAa,CAACwB,yBAAd,CAAwCrB,UAAxC,EAAoDsB,aAAa,EAAjE,EACGX,IADH,CACQY,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B,CADf,EAEGZ,IAFH,CAEQ,MAAM;AACVd,YAAAA,aAAa,CAACe,oCAAd;AAEA,kBAAMc,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACAD,YAAAA,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,OAAT,KAAqB,CAAtC;AACAH,YAAAA,QAAQ,CAACI,QAAT,CAAkB,EAAlB;AACAJ,YAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AAEAlC,YAAAA,aAAa,CAACmC,8BAAd,CACE/B,kBAAkB,EADpB,EAEE;AACEgC,cAAAA,IAAI,EAAEP,QADR;AAEEQ,cAAAA,MAAM,EAAE;AAFV,aAFF;AAQAzB,YAAAA,YAAY,CAAC0B,OAAb,CAAqBpC,gBAArB,EAAuCgB,IAAI,CAACqB,SAAL,CAAe,IAAf,CAAvC;AACD,WAnBH,EAoBGC,KApBH,CAoBSC,GAAG,IAAI;AACZd,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBa,GAAnB;AACD,WAtBH;AAuBD;AACF,OA1BD;AA2BD;AACF,GAhCH;AAiCD;;AAED,SAAShB,aAAT,GAAyB;AACvB,SAAO;AACLiB,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,WAAW,EAAE,sDAFR;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,KAAK,EAAE;AAJF,GAAP;AAMD","sourcesContent":["import React from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport { Notifications } from 'expo';\r\n\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nconst NOTIFICATION_KEY = 'MobileFlashcard:notifications';\r\nconst CHANNEL_ID = 'DailyReminder';\r\n\r\nfunction createNotification() {\r\n  return {\r\n    title: 'Reminder to study',\r\n    body: \"ðŸ‘‹Please, Don't forget to study for today! Good Luck!\",\r\n    android: {\r\n      channelId: CHANNEL_ID,\r\n      color: 'red',\r\n      sticky: false,\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearNotification() {\r\n  return AsyncStorage.removeItem(NOTIFICATION_KEY).then(\r\n    Notifications.cancelAllScheduledNotificationsAsync\r\n  );\r\n}\r\n\r\nexport function setNotification() {\r\n  AsyncStorage.getItem(NOTIFICATION_KEY)\r\n    .then(JSON.parse)\r\n    .then(data => {\r\n      if (data === null) {\r\n        Permissions.askAsync(Permissions.NOTIFICATIONS).then(({ status }) => {\r\n          if (status === 'granted') {\r\n            Notifications.createChannelAndroidAsync(CHANNEL_ID, createChannel())\r\n              .then(val => console.log('channel return:', val))\r\n              .then(() => {\r\n                Notifications.cancelAllScheduledNotificationsAsync();\r\n\r\n                const tomorrow = new Date();\r\n                tomorrow.setDate(tomorrow.getDate() + 1);\r\n                tomorrow.setHours(20);\r\n                tomorrow.setMinutes(0);\r\n\r\n                Notifications.scheduleLocalNotificationAsync(\r\n                  createNotification(),\r\n                  {\r\n                    time: tomorrow,\r\n                    repeat: 'day'\r\n                  }\r\n                );\r\n\r\n                AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true));\r\n              })\r\n              .catch(err => {\r\n                console.log('err', err);\r\n              });\r\n          }\r\n        });\r\n      }\r\n    });\r\n}\r\n\r\nfunction createChannel() {\r\n  return {\r\n    name: 'Daily Reminder',\r\n    description: 'This is a daily reminder for you to study, Good Luck',\r\n    priority: 'high',\r\n    sound: true,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}