{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/AddDeck.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchingButton from \"./TouchingButton\";\nimport { gray, green, white, textGray, darkGray } from \"../utils/colors\";\nimport { connect } from 'react-redux';\nimport { addDeck } from \"../actions/index\";\nimport { saveDeckTitleAS } from \"../utils/api\";\nimport { StackActions, NavigationActions } from 'react-navigation';\nexport class AddDeck extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      text: ''\n    };\n\n    this.submit = () => {\n      const {\n        navigation,\n        addDeck\n      } = this.props;\n      const {\n        text\n      } = this.state;\n      saveDeckTitleAS(text);\n      addDeck(text);\n      const resetAction = StackActions.reset({\n        index: 1,\n        actions: [NavigationActions.navigate({\n          routeName: 'Home'\n        }), NavigationActions.navigate({\n          routeName: 'DetailsOfDeck',\n          params: {\n            title: text\n          }\n        })]\n      });\n      navigation.dispatch(resetAction);\n      this.setState(() => ({\n        text: ''\n      }));\n    };\n\n    this.change = text => {\n      this.setState({\n        text\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      }\n    }, \"Congrats, you are about to create a new deck. What's the name of your new deck ?? \")), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter Deck Name\",\n      onChangeText: this.change,\n      value: this.state.text,\n      onSubmitEditing: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      }\n    }), React.createElement(TouchingButton, {\n      onPress: this.submit,\n      disabled: this.state.text === '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      }\n    }, \" Create New Deck \"));\n  }\n\n}\nAddDeck.propTypes = {\n  addDeck: PropTypes.func.isRequired,\n  navigation: PropTypes.object.isRequired\n};\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: darkGray,\n    fontSize: 24,\n    height: 40,\n    backgroundColor: white,\n    marginBottom: 20\n  },\n  title: {\n    marginTop: 20,\n    fontSize: 24\n  }\n});\nexport default connect(null, {\n  addDeck\n})(AddDeck);","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/AddDeck.js"],"names":["React","Component","PropTypes","TouchingButton","gray","green","white","textGray","darkGray","connect","addDeck","saveDeckTitleAS","StackActions","NavigationActions","AddDeck","state","text","submit","navigation","props","resetAction","reset","index","actions","navigate","routeName","params","title","dispatch","setState","change","render","styles","input","propTypes","func","isRequired","object","StyleSheet","create","borderWidth","borderColor","fontSize","height","backgroundColor","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, View, StyleSheet, TextInput } from 'react-native';\r\nimport TouchingButton from './TouchingButton';\r\nimport { gray, green, white, textGray, darkGray } from '../utils/colors';\r\nimport { connect } from 'react-redux';\r\nimport { addDeck } from '../actions/index';\r\nimport { saveDeckTitleAS } from '../utils/api';\r\nimport { StackActions, NavigationActions } from 'react-navigation';\r\n\r\nexport class AddDeck extends Component {\r\n  static propTypes = {\r\n    addDeck: PropTypes.func.isRequired,\r\n    navigation: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    text: ''\r\n  };\r\n\r\n  submit = () => {\r\n    const { navigation, addDeck } = this.props;\r\n    const { text } = this.state;\r\n\r\n    saveDeckTitleAS(text);\r\n    addDeck(text);\r\n\r\n    const resetAction = StackActions.reset({\r\n      index: 1,\r\n      actions: [\r\n        NavigationActions.navigate({ routeName: 'Home' }),\r\n        NavigationActions.navigate({\r\n          routeName: 'DetailsOfDeck',\r\n          params: { title: text }\r\n        })\r\n      ]\r\n    });\r\n    navigation.dispatch(resetAction);\r\n\r\n    this.setState(() => ({ text: '' }));\r\n  };\r\n\r\n  change = text => {\r\n    this.setState({ text });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <View>\r\n        <View>\r\n          <Text style={styles.title}>Congrats, you are about to create a new deck.\r\n            What's the name of your new deck ?? </Text>\r\n        </View>\r\n         \r\n          <TextInput style={styles.input} placeholder=\"Enter Deck Name\"\r\n            onChangeText={this.change}\r\n            value={this.state.text}\r\n            onSubmitEditing={this.submit}\r\n          />\r\n        <TouchingButton onPress={this.submit} disabled={this.state.text === ''} > Create New Deck </TouchingButton>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: darkGray,\r\n    fontSize: 24,\r\n    height: 40,\r\n    backgroundColor: white,\r\n    marginBottom: 20\r\n  },\r\n\r\n  title: {\r\n    marginTop: 20,\r\n    fontSize: 24\r\n  },\r\n});\r\n\r\nexport default connect(null, { addDeck })(AddDeck);\r\n"]},"metadata":{},"sourceType":"module"}