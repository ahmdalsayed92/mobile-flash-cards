{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/DetailsOfDeck.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Deck from \"./Deck\";\nimport TouchingButton from \"./TouchingButton\";\nimport CustomButton from \"./CustomButton\";\nimport { gray, textGray, green, white, red, pink, darkGray, blue } from \"../utils/colors\";\nimport { connect } from 'react-redux';\nimport { removeCertainDeck } from \"../actions/index\";\nimport { removeDeckAS } from \"../utils/api\";\nexport class DetailsOfDeck extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.delete = id => {\n      const {\n        removeCertainDeck,\n        navigation\n      } = this.props;\n      removeCertainDeck(id);\n      removeDeckAS(id);\n      navigation.goBack();\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.deck !== undefined;\n  }\n\n  render() {\n    const {\n      certainDeck\n    } = this.props;\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      }\n    }, React.createElement(Deck, {\n      id: certainDeck.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      }\n    }, React.createElement(TouchingButton, {\n      onPress: () => this.props.navigation.navigate('Quiz', {\n        title: certainDeck.title\n      }),\n      btnStyle: {\n        backgroundColor: blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      }\n    }, \"Take this Quiz\")), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      }\n    }, React.createElement(TouchingButton, {\n      onPress: () => this.props.navigation.navigate('AddCard', {\n        title: certainDeck.title\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      }\n    }, \"Add New Card\")), React.createElement(CustomButton, {\n      onPress: () => this.delete(certainDeck.title),\n      styleForText: {\n        color: pink\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      }\n    }, \"Delete this Deck\"));\n  }\n\n}\nDetailsOfDeck.propTypes = {\n  removeCertainDeck: PropTypes.func.isRequired,\n  navigation: PropTypes.object.isRequired,\n  deck: PropTypes.object\n};\n\nconst mapStateToProps = (state, _ref) => {\n  let {\n    navigation\n  } = _ref;\n  const title = navigation.getParam('title', 'undefined');\n  const certainDeck = state[title];\n  return {\n    certainDeck\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeCertainDeck\n})(DetailsOfDeck);","map":{"version":3,"sources":["/Users/ahmedelsayed/work/learn/nanoDegree/flash cards/untitled folder/Mobile-flash-card-master/components/DetailsOfDeck.js"],"names":["React","Component","PropTypes","Deck","TouchingButton","CustomButton","gray","textGray","green","white","red","pink","darkGray","blue","connect","removeCertainDeck","removeDeckAS","DetailsOfDeck","delete","id","navigation","props","goBack","shouldComponentUpdate","nextProps","deck","undefined","render","certainDeck","title","navigate","backgroundColor","color","propTypes","func","isRequired","object","mapStateToProps","state","getParam"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Deck from './Deck';\r\nimport TouchingButton from './TouchingButton';\r\nimport CustomButton from './CustomButton';\r\nimport { gray, textGray, green, white, red, pink, darkGray, blue } from '../utils/colors';\r\nimport { connect } from 'react-redux';\r\nimport { removeCertainDeck } from '../actions/index';\r\nimport { removeDeckAS } from '../utils/api';\r\n\r\nexport class DetailsOfDeck extends Component {\r\n  static propTypes = {\r\n    removeCertainDeck: PropTypes.func.isRequired,\r\n    navigation: PropTypes.object.isRequired,\r\n    deck: PropTypes.object\r\n  };\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.deck !== undefined;\r\n  }\r\n  delete = id => {\r\n    const { removeCertainDeck, navigation } = this.props;\r\n\r\n    removeCertainDeck(id);\r\n    removeDeckAS(id);\r\n\r\n    navigation.goBack();\r\n  };\r\n  render() {\r\n    const { certainDeck } = this.props;\r\n\r\n    return (\r\n      <View>\r\n        <Deck id={certainDeck.title} />\r\n        <View>\r\n          <TouchingButton\r\n                onPress={() => this.props.navigation.navigate('Quiz', { title: certainDeck.title })}\r\n                btnStyle={{ backgroundColor: blue }} >\r\n                Take this Quiz \r\n          </TouchingButton>\r\n        </View>\r\n        <View>\r\n          <TouchingButton onPress={() => this.props.navigation.navigate('AddCard', { title: certainDeck.title }) }>\r\n            Add New Card\r\n          </TouchingButton>\r\n        </View>\r\n          <CustomButton onPress={() => this.delete(certainDeck.title)} styleForText={{ color: pink }} >\r\n            Delete this Deck\r\n          </CustomButton>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { navigation }) => {\r\n  const title = navigation.getParam('title', 'undefined');\r\n  const certainDeck = state[title];\r\n  return { certainDeck };\r\n};\r\nexport default connect( mapStateToProps, { removeCertainDeck })(DetailsOfDeck);\r\n"]},"metadata":{},"sourceType":"module"}